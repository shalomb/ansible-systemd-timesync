---

language: python

sudo: required

env:
  - distribution: jrei/systemd-debian
    version:      9
  - distribution: jrei/systemd-debian
    version:      10
  - distribution: jrei/systemd-debian
    version:      latest
  - distribution: solita/ubuntu-systemd
    version:      xenial
  - distribution: solita/ubuntu-systemd
    version:      bionic
  - distribution: solita/ubuntu-systemd
    version:      latest

services:
  - docker

before_install:
  - docker pull "$distribution:$version"

script:
  - instance_id=$(
      docker run
        --detach
        --env container=docker
        --privileged
        --rm
        --security-opt seccomp=unconfined
        --tmpfs /run
        --volume="$PWD":"$PWD"
        --volume="/var/run/dbus:/var/run/dbus:ro"\
        --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro
        --workdir="$PWD/tests/"
        $distribution:$version
    )
  - docker exec -it "$instance_id"
      sh -c "
        set +e;
        set -xv;
        pwd;
        ls -ld ./* ../* ../../* ../../../*;
        ps aux;
        ps -p 1;
        readlink $(ps -p 1 -o command=);
        mount;
        cat /proc/cmdline;
        env | sort;
      "
  - docker exec -it "$instance_id"
      ./env-prep.sh
  - docker exec -it "$instance_id"
      sh -c " ./test.yml --syntax-check "
  - docker exec -it "$instance_id"
      sh -c " ./test.yml --list-tasks --list-tags -vv "
  - docker exec -it "$instance_id"
      sh -c " ./test.yml -l localhost -vvvv "

after_script:
  - docker stop "$instance_id"

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/

